Mem.rule.item.set <%- JSON.stringify(MESSAGE.sow) %>
if gon?.items?
  Mem.rule.item.merge gon.items

deploy_samples = ->
  deploy = (role, call)->
    chr_job_id = "all_c"
    chr_job_id = "all_c0" if faceno in [1..10]
    chr_job_id += faceno

    turns = ["start", "main"]
    is_main = false
    for able in role.ables when able not in ["vote", "entrust"]
      is_main ||= Mem.ables.find(able).at.main

    turns = ["main"] if is_main

    for turn in turns
      if data = call(turn)
        _.merge data,
          _id: "rolelist-form--#{index}"
          turn: turn
          chr_job_id: chr_job_id
          history: ""
          point:
            actaddpt:  0
            saidcount: 0
            saidpoint: 0
          say:
            say_act: 10
            say:   1000
            gsay:  1000
            spsay: 1000
            tsay:  1000
            wsay:  1000
            xsay:  1000

        Mem.rule.item.merge [data]
      index++
    faceno++
    faceno++ if faceno ==  6
    faceno++ if faceno == 10

  faceno = 1
  index = 10

  for role in Mem.roles.where(group: "MOB").list
    deploy role, (turn)->
      return if "start" == turn
      mob: role._id
      enemy: "evil"
      win: "NONE"
      live: "mob"
      role: ["mob"]
      ext: [role._id]
      rolestate: 0x76f
      sheep: []
      love: null

  for role in Mem.roles.where(group: "LIVE").list
    deploy role, (turn)->
      return if "start" == turn
      mob: "visiter"
      enemy: "evil"
      turn: turn
      win: "HUMAN"
      live: role._id
      role: ["villager"]
      rolestate: 0x76f
      sheep: []
      love: null

  for rolename in SOW_RECORD.roles when role = Mem.roles.find(rolename)
    deploy role, (turn)->
      mob: "visiter"
      enemy: "evil"
      turn: turn
      win: role.win || "NONE"
      live: "live"
      role: [role._id]
      rolestate: 0x76f
      sheep: []
      love: null

  for rolename in SOW_RECORD.gifts when role = Mem.roles.find(rolename)
    for subrolename in ["lonewolf"]
      subrole = Mem.roles.find(subrolename)
      deploy role, (turn)->
        mob: "visiter"
        enemy: "evil"
        turn: "main"
        win: role.win || subrole.win || "NONE"
        live: "live"
        role: [subrolename, rolename]
        rolestate: 0x76f
        sheep: []
        love: null

  forms = Mem.items.where(template: "form").list
  Mem.rule.story.set [<%- JSON.stringify(TEST_VIL.story)  %>]
  Mem.rule.event.set [<%- JSON.stringify(TEST_VIL.event)  %>]
  Mem.rule.potof.set  <%- JSON.stringify(TEST_VIL.potofs) %>
  Mem.rule.form.set forms

if document.querySelector "#item-rolelist"
  deploy_samples()

for name in <%- JSON.stringify(MESSAGE.module.sow) %>
  doc.items_module name
